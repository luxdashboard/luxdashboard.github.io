{"version":3,"sources":["app/apps/TodoList.js","app/dashboard/Dashboard.js"],"names":["Component","TodoListComponent","props","state","todos","id","task","isCompleted","inputValue","statusChangedHandler","bind","addTodo","removeTodo","inputChangeHandler","event","todo","this","target","checked","setState","preventDefault","unshift","length","index","splice","value","className","onSubmit","type","placeholder","onChange","required","map","changed","key","remove","ListItem","htmlFor","children","onClick","Dashboard","initialPriceData","Object","freeze","price","useState","show","setShow","handleClose","handleShow","showSell","setShowSell","handleCloseSell","handleShowSell","beingBought","setBuying","beingSold","setSelling","priceData","updatePriceData","availAcre","setavailAcre","totalPurchases","setTotalPurchases","totalSales","setTotalSales","userHist","setUserHist","chartData","setChartData","checkTxnOne","setTxnOneBox","checkTxnTwo","setTxnTwoBox","provider","ethers","providers","Web3Provider","window","ethereum","account","setAccount","balance","setBalance","currentSale","setCurrentSale","currentlyOwned","setCurrentlyOwned","totalAllocation","setTotalAllocation","getBal","address","a","getBalance","then","balanceInEth","utils","formatEther","console","log","newBalance","Math","round","initializeProvider","signer","getSigner","Contract","AUCTION_ADDRESS","AUCTION_ABI","request","method","accounts","getTxnHistory","contract","totalAcres","grabTotalAcre","newTotalAcres","parseInt","getOwnerPurchases","grabTotalPurch","newTotalPurch","getOwnerSale","grabTotalSale","newTotalSale","addre","getNetwork","chainId","chaiNetwork","name","addr","EtherscanProvider","getHistory","history","userTxnHistory","forEach","tx","currentTimestamp","timestamp","date","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","push","totalTxnCount","userAbrTxnHistory","send_token","sender","receiver","strEther","enable","params","from","to","parseUnits","toHexString","send","transactionHash","transferOwnership","listForSale","getSaleCount","saleCount","currentRightsForSale","i","getRight","oneRight","forSale","getOwnerNumber","assetCount","curAccount","myAllocation","ownedAllocation","leasedAllocation","currentlySale","currentlyOwnedAssets","getOwnerAssets","owner","toUpperCase","active","amount","rightType","transactionHistoryData","labels","legend","display","position","datasets","data","backgroundColor","waterSource","waterLocation","rightLength","useEffect","requestAccount","testFetch","fetchOwnedAssets","grabAvailAcres","options","responsive","maintainAspectRatio","segmentShowStroke","cutoutPercentage","elements","arc","borderWidth","padding","tooltips","enabled","eachSale","leaseLength","sellWaterRight","toString","toFixed","substring","style","color","buyWaterRight","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Check","label","Footer","Button","variant","completePurchase","Label","Control","e","trim","Text","reListAssetForSale"],"mappings":"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","file":"static/js/13.a039ca06.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class TodoList extends Component {\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-header\">\n                    <h3 className=\"page-title\">\n                        Todo List\n                    </h3>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={evt =>evt.preventDefault()}>Apps</a></li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">Todo List</li>\n                        </ol>\n                    </nav>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                        <div className=\"card px-3\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Todo List</h4>\n                                <TodoListComponent />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class TodoListComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [\n                {\n                    id: 1,\n                    task: 'Pick up kids from school',\n                    isCompleted: false\n                },\n                {\n                    id: 2,\n                    task: 'Prepare for presentation',\n                    isCompleted: true\n                },\n                {\n                    id: 3,\n                    task: 'Print Statements',\n                    isCompleted: false\n                },\n                {\n                    id: 4,\n                    task: 'Create invoice',\n                    isCompleted: false\n                },\n                {\n                    id: 5,\n                    task: 'Call John',\n                    isCompleted: true\n                },\n                {\n                    id: 6,\n                    task: 'Meeting with Alisa',\n                    isCompleted: false\n                }\n            ],\n            inputValue: '',\n        }\n\n        this.statusChangedHandler = this.statusChangedHandler.bind(this);\n        this.addTodo = this.addTodo.bind(this);\n        this.removeTodo = this.removeTodo.bind(this);\n        this.inputChangeHandler = this.inputChangeHandler.bind(this);\n    }\n\n    statusChangedHandler(event, id) {\n        const todo = {...this.state.todos[id]};\n        todo.isCompleted = event.target.checked;\n\n        const todos = [...this.state.todos];\n        todos[id] = todo;\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    addTodo (event) {\n        event.preventDefault();\n\n        const todos = [...this.state.todos];\n        todos.unshift({\n            id: todos.length ? todos[todos.length - 1].id + 1 : 1,\n            task: this.state.inputValue,\n            isCompleted: false\n            \n        })\n\n        this.setState({\n            todos: todos,\n            inputValue: ''\n        })\n    }\n\n    removeTodo (index) {\n        const todos = [...this.state.todos];\n        todos.splice(index, 1);\n\n        this.setState({\n            todos: todos\n        })\n    }\n\n    inputChangeHandler(event) {\n        this.setState({\n            inputValue: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <form  className=\"add-items d-flex\" onSubmit={this.addTodo}>\n                    <input \n                        type=\"text\" \n                        className=\"form-control h-auto\" \n                        placeholder=\"What do you need to do today?\" \n                        value={this.state.inputValue} \n                        onChange={this.inputChangeHandler}\n                        required />\n                    <button type=\"submit\" className=\"btn btn-primary\">Add</button>\n                </form>\n                <div className=\"list-wrapper\">\n                    <ul className=\"d-flex flex-column todo-list\">\n                        {this.state.todos.map((todo, index) =>{\n                            return <ListItem \n                            isCompleted={todo.isCompleted}\n                            changed={(event) => this.statusChangedHandler(event, index)}\n                            key={todo.id}\n                            remove={() => this.removeTodo(index) }\n                            >{todo.task}</ListItem>\n                        })}\n                    </ul>\n                </div>\n            </>\n        )\n    }\n}\n\nconst ListItem = (props) => {\n    \n    return (\n        <li className={(props.isCompleted ? 'completed' : null)}>\n            <div className=\"form-check\">\n                <label htmlFor=\"\" className=\"form-check-label\"> \n                    <input className=\"checkbox\" type=\"checkbox\" \n                        checked={props.isCompleted} \n                        onChange={props.changed} \n                        /> {props.children} <i className=\"input-helper\"></i>\n                </label>\n            </div>\n            <i className=\"remove mdi mdi-close-box\" onClick={props.remove}></i>\n        </li>\n    )\n};\n\nexport default TodoList\n","import React, { Component, useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { parseEther, formatEther } from '@ethersproject/units';\nimport { Doughnut, Chart } from 'react-chartjs-2';\nimport Slider from \"react-slick\";\nimport { TodoListComponent } from '../apps/TodoList'\nimport { VectorMap } from \"react-jvectormap\"\nimport { AUCTION_ABI, AUCTION_ADDRESS } from \"../../config.js\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nfunction Dashboard () {\n\n\n  const initialPriceData = Object.freeze({\n  price: \"\"\n});\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [showSell, setShowSell] = useState(false);\n  const handleCloseSell = () => setShowSell(false);\n  const handleShowSell = () => setShowSell(true);\n  const [beingBought, setBuying] = useState('');\n  const [beingSold, setSelling] = useState('');\n  const [priceData, updatePriceData] = useState(initialPriceData);\n  const [availAcre, setavailAcre] = useState('');\n  const [totalPurchases, setTotalPurchases] = useState('');\n  const [totalSales, setTotalSales] = useState('');\n  const [userHist, setUserHist] = useState('');\n  const [chartData, setChartData] = useState('');\n  const [checkTxnOne, setTxnOneBox] = useState(false);\n  const [checkTxnTwo, setTxnTwoBox] = useState(false);\n\n  const mapData = {\n    \"BZ\": 75.00,\n    \"US\": 56.25,\n    \"AU\": 15.45,\n    \"GB\": 25.00,\n    \"RO\": 10.25,\n    \"GE\": 33.25\n  }\n\n  const emptyAddress = '0x0000000000000000000000000000000000000000';\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n\n  const [account, setAccount] = useState('');\n  const [balance, setBalance] = useState('');\n  const [currentSale, setCurrentSale] = useState([]);\n  const [currentlyOwned, setCurrentlyOwned] = useState([]);\n  const [amount, setAmount] = useState(0);\n  const [myBid, setMyBid] = useState(0);\n  const [isOwner, setIsOwner] = useState(false);\n  const [highestBid, setHighestBid] = useState(0);\n  const [highestBidder, setHighestBidder] = useState('');\n  const [totalAllocation, setTotalAllocation] = useState('');\n\n  async function getBal(address) {\n\n    provider.getBalance(address).then((balance) => {\n     // convert a currency unit from wei to ether\n     const balanceInEth = ethers.utils.formatEther(balance)\n     console.log(`balance: ${balanceInEth} ETH`)\n     let newBalance = Math.round(balanceInEth*100)/100;\n     setBalance(newBalance)\n    })\n  }\n\n\n  // Sets up a new Ethereum provider and returns an interface for interacting with the smart contract\n   async function initializeProvider() {\n     const provider = new ethers.providers.Web3Provider(window.ethereum);\n     const signer = provider.getSigner();\n\n     return new ethers.Contract(AUCTION_ADDRESS, AUCTION_ABI, signer);\n   }\n\n\n  async function requestAccount() {\n   const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n   setAccount(accounts[0]);\n   getBal(accounts[0])\n   getTxnHistory(accounts[0])\n  }\n\n  async function fetchHighestBid() {\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     try {\n       const highestBid = await contract.fetchHighestBid();\n       const { bidAmount, bidder } = highestBid;\n\n     // Convert bidAmount from Wei to Ether and round value to 4 decimal places\n        setHighestBid(parseFloat(formatEther(bidAmount.toString())).toPrecision(4));\n        setHighestBidder(bidder.toLowerCase());\n     } catch (e) {\n       console.log('error fetching highest bid: ', e);\n     }\n   }\n }\n\n\n async function grabAvailAcres() {\n  if (typeof window.ethereum !== 'undefined') {\n    const contract = await initializeProvider();\n\n    try {\n\n      const grabTotalAcre = await contract.totalAcres();\n      var newTotalAcres = parseInt(grabTotalAcre, 10)\n      setavailAcre(newTotalAcres)\n\n    } catch (e) {\n      console.log('error fetching acre/ft data: ', e);\n    }\n  }\n }\n\n async function grabTotalPurch() {\n  if (typeof window.ethereum !== 'undefined') {\n    const contract = await initializeProvider();\n\n    try {\n\n      const grabTotalPurch = await contract.getOwnerPurchases();\n      var newTotalPurch = parseInt(grabTotalPurch, 10)\n      setTotalPurchases(newTotalPurch)\n\n    } catch (e) {\n      console.log('error fetching purchase data: ', e);\n    }\n  }\n }\n\n async function grabTotalSale() {\n  if (typeof window.ethereum !== 'undefined') {\n    const contract = await initializeProvider();\n\n    try {\n\n      const grabTotalSale = await contract.getOwnerSale();\n      var newTotalSale = parseInt(grabTotalSale, 10)\n      setTotalSales(newTotalSale)\n\n    } catch (e) {\n      console.log('error fetching sale data: ', e);\n    }\n  }\n }\n\n\n async function getTxnHistory (addre) {\n   const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n   const chainId = await provider.getNetwork()\n\n   console.log(chainId)\n\n   var chaiNetwork = chainId.name\n   var addr = addre\n\n   //chaiNetwork = 'ropsten'\n\n   if (chaiNetwork != 'unknown') {\n\n     let etherscanProvider = new ethers.providers.EtherscanProvider(chaiNetwork)\n\n     etherscanProvider.getHistory(addr).then((history) => {\n\n       var userTxnHistory = []\n\n      history.forEach((tx) => {\n\n        if ((parseInt(tx.value[\"_hex\"]) != 0)) {\n\n          let currentTimestamp = tx.timestamp*1000\n          let date = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit' }).format(currentTimestamp)\n\n          tx.timestamp = date\n\n          userTxnHistory.push(tx)\n        }\n\n      })\n\n      var totalTxnCount = userTxnHistory.length\n\n      if (userTxnHistory[totalTxnCount-2]) {\n        setTxnOneBox(true)\n      }\n\n      if (userTxnHistory[totalTxnCount-1]) {\n        setTxnTwoBox(true)\n      }\n\n      var userAbrTxnHistory = [userTxnHistory[totalTxnCount-2], userTxnHistory[totalTxnCount-1]]\n\n      setUserHist(userAbrTxnHistory)\n\n      console.log(userAbrTxnHistory)\n\n   });\n  }\n }\n\n\n async function send_token(\n  sender, receiver, strEther\n) {\n  console.log(`payWithMetamask(receiver=${receiver}, sender=${sender}, strEther=${strEther})`)\n\n    let ethereum = window.ethereum;\n\n\n    // Request account access if needed\n    await ethereum.enable();\n\n\n    let provider = new ethers.providers.Web3Provider(ethereum);\n\n    // Acccounts now exposed\n    const params = [{\n        from: sender,\n        to: receiver,\n        value: ethers.utils.parseUnits(strEther, 'ether').toHexString()\n    }];\n\n    const transactionHash = await provider.send('eth_sendTransaction', params)\n    console.log('transactionHash is ' + transactionHash);\n  }\n\n async function completePurchase(beingBought) {\n  if (typeof window.ethereum !== 'undefined') {\n    const contract = await initializeProvider();\n    try {\n\n      send_token(account, beingBought[1], \".0001\")\n\n      const makePurchase = await contract.transferOwnership(beingBought[0]);\n\n      handleClose()\n\n    } catch (e) {\n      console.log('error completing purchase: ', e);\n    }\n  }\n}\n\nasync function reListAssetForSale(beingSold) {\n if (typeof window.ethereum !== 'undefined') {\n   const contract = await initializeProvider();\n   try {\n\n     const makePurchase = await contract.listForSale(beingSold[0], parseInt(priceData.price, 10));\n\n     handleCloseSell()\n\n   } catch (e) {\n     console.log('error listing asset: ', e);\n   }\n }\n}\n\n\nasync function testFetch() {\n  const contract = await initializeProvider();\n  var saleCount = await contract.getSaleCount();\n  try {\n    var currentRightsForSale = []\n    for (var i = 0; i < saleCount; i++) {\n      const oneRight = await contract.getRight(i)\n      if (oneRight.forSale == true){\n        currentRightsForSale.push(oneRight)\n      }\n      else {\n        console.log(\"not for sale!\")\n      }\n    }\n    setCurrentSale(currentRightsForSale);\n  } catch (e) {\n    console.log('error fetching marketplace assets: ', e);\n  }\n}\n\nasync function fetchOwnedAssets() {\n  const contract = await initializeProvider();\n  var assetCount = await contract.getOwnerNumber();\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const curAccount = accounts[0]\n  var myAllocation = 0;\n  var ownedAllocation = 0;\n  var leasedAllocation = 0;\n  var currentlySale = 0;\n\n  try {\n    var currentlyOwnedAssets = []\n    for (var i = 0; i < assetCount; i++) {\n      const oneRight = await contract.getOwnerAssets(i)\n      if ((oneRight.owner.toUpperCase() == curAccount.toUpperCase()) && (oneRight.active == true)){\n        currentlyOwnedAssets.push(oneRight)\n        myAllocation = myAllocation + parseInt(oneRight.amount, 10);\n\n        if (oneRight.forSale) {\n          currentlySale = currentlySale + parseInt(oneRight.amount, 10)\n        }\n\n        else if (oneRight.rightType) {\n          ownedAllocation = ownedAllocation + parseInt(oneRight.amount, 10)\n        }\n        else {\n          leasedAllocation = leasedAllocation + parseInt(oneRight.amount, 10)\n        }\n      }\n      else {\n        console.log(\"right previously sold!\")\n      }\n    }\n\n    var newChartData = [currentlySale, ownedAllocation, leasedAllocation]\n    setChartData(newChartData)\n    setCurrentlyOwned(currentlyOwnedAssets);\n    setTotalAllocation(myAllocation);\n\n  } catch (e) {\n    console.log('error fetching owned assets: ', e);\n  }\n}\n\n\n\nvar transactionHistoryData =  {\n  labels: [\"For Sale\", \"Own\", \"Lease\"],\n  legend: {display: true, position: \"right\"},\n  datasets: [{\n      data: chartData,\n      backgroundColor: [\n        \"#111111\",\"#00d25b\",\"#ffab00\"\n      ]\n    }\n  ]\n};\n\n\n\n async function fetchForSale() {\n  if (typeof window.ethereum !== 'undefined') {\n    const contract = await initializeProvider();\n    var saleCount = await contract.getSaleCount().call()\n    try {\n      alert (saleCount)\n      const highestBid = await contract.fetchHighestBid();\n      const { bidAmount, bidder } = highestBid;\n\n    // Convert bidAmount from Wei to Ether and round value to 4 decimal places\n       setHighestBid(parseFloat(formatEther(bidAmount.toString())).toPrecision(4));\n       setHighestBidder(bidder.toLowerCase());\n    } catch (e) {\n      console.log('error fetching highest bid: ', e);\n    }\n  }\n}\n\n async function fetchMyBid() {\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     try {\n       const myBid = await contract.bids(account);\n       setMyBid(parseFloat(formatEther(myBid.toString())).toPrecision(4));\n     } catch (e) {\n       console.log('error fetching my bid: ', e);\n     }\n   }\n }\n\n async function addRight() {\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     try {\n       const owner = await contract.getOwner();\n       setIsOwner(owner.toLowerCase() === account);\n     } catch (e) {\n       console.log('error adding right: ', e);\n     }\n   }\n }\n\n async function fetchOwner() {\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     try {\n       const owner = await contract.getOwner();\n       setIsOwner(owner.toLowerCase() === account);\n     } catch (e) {\n       console.log('error fetching owner: ', e);\n     }\n   }\n }\n\n async function submitBid(event) {\n   event.preventDefault();\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     try {\n       // User inputs amount in terms of Ether, convert to Wei before sending to the contract.\n       const wei = parseEther(amount);\n       await contract.makeBid({ value: wei });\n       // Wait for the smart contract to emit the LogBid event then update component state\n       contract.on('LogBid', (_, __) => {\n         fetchMyBid();\n         fetchHighestBid();\n       });\n     } catch (e) {\n       console.log('error making bid: ', e);\n     }\n   }\n }\n\n\n async function withdraw() {\n   if (typeof window.ethereum !== 'undefined') {\n     const contract = await initializeProvider();\n     // Wait for the smart contract to emit the LogWithdrawal event and update component state\n     contract.on('LogWithdrawal', (_) => {\n       fetchMyBid();\n       fetchHighestBid();\n     });\n     try {\n       await contract.withdraw();\n     } catch (e) {\n       console.log('error withdrawing fund: ', e);\n     }\n   }\n }\n\n  async function buyWaterRight(id, owner, waterSource, waterLocation, amount, price, rightType, rightLength) {\n  handleShow()\n  setBuying([id, owner, waterSource, waterLocation, amount, price, rightType, rightLength])\n  }\n\n  async function sellWaterRight(id, waterSource, waterLocation, amount, rightType, rightLength) {\n  handleShowSell()\n  setSelling([id, waterSource, waterLocation, amount, rightType, rightLength])\n  }\n\n\n  const handleChange = (e) => {\n      updatePriceData({\n        ...priceData,\n\n        // Trimming any whitespace\n        [e.target.name]: e.target.value.trim()\n      });\n    };\n\n\n  function renderMarketData() {\n        return currentSale.map((eachSale, index) => {\n           const { id, owner, active, waterSource, waterLocation, amount, price, rightType, leaseLength } = eachSale //destructuring\n\n           return (\n             <tr>\n                 <td key={id}>\n\n                   <div className=\"preview-thumbnail\">\n                     <div className=\"preview-icon bg-primary text-center\">\n                       <i className=\"mdi mdi-ethereum buy-preview\" style={{color:\"white\"}} onClick={() => {buyWaterRight(id, owner, waterSource, waterLocation, amount, price, rightType, leaseLength)}}></i>\n                     </div>\n                   </div>\n                 </td>\n                 <td>{id.toString()}</td>\n                 <td>{waterSource}</td>\n                 <td> {waterLocation} </td>\n                 <td> {owner.toString().length > 10 ? owner.toString().substring(0, 7) + \"...\" : owner.toString()} </td>\n                 <td> {amount.toString()} </td>\n                 <td> {parseInt(price[\"_hex\"])} </td>\n                 <td>\n                   <div className=\"badge badge-outline-success\">Active</div>\n                 </td>\n                </tr>\n           )\n        })\n     }\n\n\n\nfunction renderTableData() {\n      return currentlyOwned.map((eachSale, index) => {\n         const { id, owner, active, waterSource, waterLocation, amount, price, forSale, rightType, leaseLength } = eachSale //destructuring\n\n         return (\n           <div className=\"preview-item border-bottom\" key={id}>\n             <div className=\"preview-thumbnail\">\n               <div className=\"preview-icon bg-primary\">\n                 <i className=\"mdi mdi-ethereum\" onClick={() => {sellWaterRight(id, waterSource, waterLocation, amount, rightType, leaseLength)}}></i>\n               </div>\n             </div>\n             <div className=\"preview-item-content d-sm-flex flex-grow\">\n               <div className=\"flex-grow\">\n                 <h6 className=\"preview-subject\">{waterSource} ({waterLocation})</h6>\n                 <p className=\"text-muted mb-0\">{rightType ? \"Owned\" : (\"Lease: \" + leaseLength + \" months remaining\" )}</p>\n               </div>\n               <div className=\"mr-auto text-sm-right pt-2 pt-sm-0\">\n                 <p className=\"text-muted\">Total: {amount.toString()} Acre/Ft</p>\n                 <p className=\"text-muted mb-0\">Used: 0 Acre/Ft</p>\n               </div>\n             </div>\n           </div>\n         )\n      })\n   }\n\n\n  const transactionHistoryOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    segmentShowStroke: false,\n    cutoutPercentage: 70,\n    elements: {\n      arc: {\n          borderWidth: 0\n      }\n    },\n    legend: {\n      display: true,\n      padding: 45,\n      position: \"bottom\"\n    },\n    tooltips: {\n      enabled: true\n    }\n  }\n\n  const sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }\n\n  useEffect(() => {\n   requestAccount();\n   testFetch();\n   fetchOwnedAssets();\n   grabAvailAcres()\n   grabTotalPurch()\n   grabTotalSale()\n }, []);\n\n useEffect(() => {\n   if (account) {\n      console.log(account)\n   }\n }, [account]);\n\n    return (\n      <div>\n        {/*<div className=\"row\">\n          <div className=\"col-12 grid-margin stretch-card\">\n            <div className=\"card corona-gradient-card\">\n              <div className=\"card-body py-0 px-0 px-sm-3\">\n                <div className=\"row align-items-center\">\n                  <div className=\"col-4 col-sm-3 col-xl-2\">\n                    <img src={require('../../assets/images/dashboard/Group126@2x.png')} className=\"gradient-corona-img img-fluid\" alt=\"banner\" />\n                  </div>\n                  <div className=\"col-5 col-sm-7 col-xl-8 p-0\">\n                    <h4 className=\"mb-1 mb-sm-0\">Atreides Water Account</h4>\n                    <p className=\"mb-0 font-weight-normal d-none d-sm-block\">Atreides is your path to buying, selling, and trading water rights in the USA!</p>\n                  </div>\n                  <div className=\"col-3 col-sm-2 col-xl-2 pl-0 text-center\">\n                    <button className=\"btn btn-outline-light btn-rounded get-started-btn\">Get Started</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>*/}\n        <div className=\"row\">\n          <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-9\">\n                    <div className=\"d-flex align-items-center align-self-start\">\n                      <h3 className=\"mb-0\">{totalAllocation}</h3>\n                      <p className=\"text-success ml-2 mb-0 font-weight-medium\">Acre/Ft</p>\n                    </div>\n                  </div>\n                  <div className=\"col-3\">\n                    <div className=\"icon icon-box-success \">\n                      <span className=\"mdi mdi-arrow-top-right icon-item\"></span>\n                    </div>\n                  </div>\n                </div>\n                <h6 className=\"text-muted font-weight-normal\">Total Allocation</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-9\">\n                    <div className=\"d-flex align-items-center align-self-start\">\n                      <h3 className=\"mb-0\">0</h3>\n                      <p className=\"text-success ml-2 mb-0 font-weight-medium\">Acre/Ft</p>\n                    </div>\n                  </div>\n                  <div className=\"col-3\">\n                    <div className=\"icon icon-box-success\">\n                      <span className=\"mdi mdi-arrow-top-right icon-item\"></span>\n                    </div>\n                  </div>\n                </div>\n                <h6 className=\"text-muted font-weight-normal\">Total Used</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-9\">\n                    <div className=\"d-flex align-items-center align-self-start\">\n                      <h3 className=\"mb-0\">{totalAllocation}</h3>\n                      <p className=\"text-danger ml-2 mb-0 font-weight-medium\">Acre/Ft</p>\n                    </div>\n                  </div>\n                  <div className=\"col-3\">\n                    <div className=\"icon icon-box-danger\">\n                      <span className=\"mdi mdi-arrow-bottom-left icon-item\"></span>\n                    </div>\n                  </div>\n                </div>\n                <h6 className=\"text-muted font-weight-normal\">Remaining</h6>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-3 col-sm-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-9\">\n                    <div className=\"d-flex align-items-center align-self-start\">\n                      <h3 className=\"mb-0\">{availAcre}</h3>\n                      <p className=\"text-success ml-2 mb-0 font-weight-medium\">Acre/Ft</p>\n                    </div>\n                  </div>\n                  <div className=\"col-3\">\n                    <div className=\"icon icon-box-success \">\n                      <span className=\"mdi mdi-arrow-top-right icon-item\"></span>\n                    </div>\n                  </div>\n                </div>\n                <h6 className=\"text-muted font-weight-normal\">Market Supply</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"row\">\n          {/*<div className=\"col-md-4 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Recent Activity</h4>\n                {checkTxnOne ?\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">Transfer to {userHist[1] ? userHist[1].to.toString().substring(0, 5) + \"...\" : null}</h6>\n                    <p className=\"text-muted mb-0\">{userHist[1] ? userHist[1].timestamp : \"NULL\"}</p>\n                  </div>\n                  <div className=\"align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0\">\n                    <h6 className=\"font-weight-bold mb-0\">{userHist[1] ? ethers.utils.formatEther((parseInt(userHist[1].value[\"_hex\"]*10000000000))) : \"NULL\"}</h6>\n                  </div>\n                </div>\n                : null }\n\n                {checkTxnTwo ?\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">Tranfer to {userHist[0] ? userHist[0].to.toString().substring(0, 5) + \"...\" : \"NULL\"}</h6>\n                    <p className=\"text-muted mb-0\">{userHist[0] ? userHist[0].timestamp : \"NULL\"}</p>\n                  </div>\n                  <div className=\"align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0\">\n                    <h6 className=\"font-weight-bold mb-0\">{userHist[0] ? ethers.utils.formatEther(parseInt(userHist[0].value[\"_hex\"]*10000000000)) : \"NULL\"}</h6>\n                  </div>\n                </div>\n                :\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">No Recent Transactions!</h6>\n                  </div>\n                </div>\n              }\n              </div>\n            </div>\n          </div>\n          */}\n\n\n\n          <div className=\"col-md-12 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n\n              <h4 className=\"card-title\">My Water Rights</h4>\n                <div className=\"row\">\n                  <div className=\"col-6\">\n                    <div className=\"aligner-wrapper\">\n                      <Doughnut data={transactionHistoryData} options={transactionHistoryOptions} />\n                      <div className=\"absolute center-content\">\n                        <h5 className=\"font-weight-normal text-whiite text-center mb-2 text-white\">{totalAllocation} Acre/Ft</h5>\n                        <p className=\"text-small text-muted text-center mb-0\">Current Rights</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-6 align-items-center\">\n                    <div className=\"row\">\n                      <div className=\"col-12\">\n                        <div className=\"preview-list\">\n\n                          {renderTableData()}\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card h-100\">\n              <div className=\"card-body\">\n                <h5>Assets</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">{balance}</h2>\n                      <p className=\"text-success ml-2 mb-0 font-weight-medium\">ETH</p>\n                    </div>\n                    <h6 className=\"text-muted font-weight-normal\">{(balance*.66).toFixed(6)} available to trade</h6>\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-codepen text-primary ml-auto\"></i>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">${(balance * 3162).toFixed(2)}</h2>\n                      <p className=\"text-success ml-2 mb-0 font-weight-medium\">USD</p>\n                    </div>\n                    <h6 className=\"text-muted font-weight-normal\">${(balance*.66 * 3162).toFixed(2)} available to trade</h6>\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-currency-usd text-primary ml-auto\"></i>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card h-100\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Recent Activity</h4>\n                {checkTxnOne ?\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">Transfer to {userHist[1] ? userHist[1].to.toString().substring(0, 5) + \"...\" : null}</h6>\n                    <p className=\"text-muted mb-0\">{userHist[1] ? userHist[1].timestamp : \"NULL\"}</p>\n                  </div>\n                  <div className=\"align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0\">\n                    <h6 className=\"font-weight-bold mb-0\">{userHist[1] ? ethers.utils.formatEther((parseInt(userHist[1].value[\"_hex\"]))) : \"NULL\"}</h6>\n                  </div>\n                </div>\n                : null }\n\n                {checkTxnTwo ?\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">Tranfer to {userHist[0] ? userHist[0].to.toString().substring(0, 5) + \"...\" : \"NULL\"}</h6>\n                    <p className=\"text-muted mb-0\">{userHist[0] ? userHist[0].timestamp : \"NULL\"}</p>\n                  </div>\n                  <div className=\"align-self-center flex-grow text-right text-md-center text-xl-right py-md-2 py-xl-0\">\n                    <h6 className=\"font-weight-bold mb-0\">{userHist[0] ? ethers.utils.formatEther(parseInt(userHist[0].value[\"_hex\"])) : \"NULL\"}</h6>\n                  </div>\n                </div>\n                :\n                <div className=\"bg-gray-dark d-flex d-md-block d-xl-flex flex-row py-3 px-4 px-md-3 px-xl-4 rounded mt-3\">\n                  <div className=\"text-md-center text-xl-left\">\n                    <h6 className=\"mb-1\">No Recent Transactions!</h6>\n                  </div>\n                </div>\n              }\n              </div>\n            </div>\n          </div>\n          <div className=\"col-sm-4 grid-margin\">\n            <div className=\"card h-100\">\n              <div className=\"card-body\">\n                <h5>Purchases</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">${totalPurchases}</h2>\n                      <p className=\"text-danger ml-2 mb-0 font-weight-medium\">-2.1% </p>\n                    </div>\n                    <h6 className=\"text-muted font-weight-normal\">2.27% Since last month</h6>\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-chart-line text-success ml-auto\"></i>\n                  </div>\n                </div>\n                <br />\n                <br />\n\n                <h5>Sales</h5>\n                <div className=\"row\">\n                  <div className=\"col-8 col-sm-12 col-xl-8 my-auto\">\n                    <div className=\"d-flex d-sm-block d-md-flex align-items-center\">\n                      <h2 className=\"mb-0\">${totalSales}</h2>\n                      <p className=\"text-danger ml-2 mb-0 font-weight-medium\">-3.9% </p>\n                    </div>\n                    <h6 className=\"text-muted font-weight-normal\">1.02% Since last month</h6>\n                  </div>\n                  <div className=\"col-4 col-sm-12 col-xl-4 text-center text-xl-right\">\n                    <i className=\"icon-lg mdi mdi-chart-bar text-success ml-auto\"></i>\n                  </div>\n                </div>\n\n\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Purchase Water Rights (Atreides Markeplace)</h4>\n                <p> Permit Rights by District </p>\n                <div className=\"table-responsive\">\n                  <table className=\"table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          Buy\n                        </th>\n                        <th> ID </th>\n                        <th> Location </th>\n                        <th> Source </th>\n                        <th> Owner </th>\n                        <th> Amount </th>\n                        <th> Price </th>\n                        <th> Status </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {renderMarketData()}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/*\n        <div className=\"row\">\n          <div className=\"col-md-6 col-xl-4 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <div className=\"d-flex flex-row justify-content-between\">\n                  <h4 className=\"card-title\">Messages</h4>\n                  <p className=\"text-muted mb-1 small\">View all</p>\n                </div>\n                <div className=\"preview-list\">\n                  <div className=\"preview-item border-bottom\">\n                    <div className=\"preview-thumbnail\">\n                      <img src={require('../../assets/images/faces/face6.jpg')} alt=\"face\" className=\"rounded-circle\" />\n                    </div>\n                    <div className=\"preview-item-content d-flex flex-grow\">\n                      <div className=\"flex-grow\">\n                        <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                          <h6 className=\"preview-subject\">Leonard</h6>\n                          <p className=\"text-muted text-small\">5 minutes ago</p>\n                        </div>\n                        <p className=\"text-muted\">Well, it seems to be working now.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"preview-item border-bottom\">\n                    <div className=\"preview-thumbnail\">\n                      <img src={require('../../assets/images/faces/face8.jpg')} alt=\"face\" className=\"rounded-circle\" />\n                    </div>\n                    <div className=\"preview-item-content d-flex flex-grow\">\n                      <div className=\"flex-grow\">\n                        <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                          <h6 className=\"preview-subject\">Luella Mills</h6>\n                          <p className=\"text-muted text-small\">10 Minutes Ago</p>\n                        </div>\n                        <p className=\"text-muted\">Well, it seems to be working now.</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"preview-item border-bottom\">\n                    <div className=\"preview-thumbnail\">\n                      <img src={require('../../assets/images/faces/face9.jpg')} alt=\"face\" className=\"rounded-circle\" />\n                    </div>\n                    <div className=\"preview-item-content d-flex flex-grow\">\n                      <div className=\"flex-grow\">\n                        <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                          <h6 className=\"preview-subject\">Ethel Kelly</h6>\n                          <p className=\"text-muted text-small\">2 Hours Ago</p>\n                        </div>\n                        <p className=\"text-muted\">Please review the tickets</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"preview-item border-bottom\">\n                    <div className=\"preview-thumbnail\">\n                      <img src={require('../../assets/images/faces/face11.jpg')} alt=\"face\" className=\"rounded-circle\" />\n                    </div>\n                    <div className=\"preview-item-content d-flex flex-grow\">\n                      <div className=\"flex-grow\">\n                        <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                          <h6 className=\"preview-subject\">Herman May</h6>\n                          <p className=\"text-muted text-small\">4 Hours Ago</p>\n                        </div>\n                        <p className=\"text-muted\">Thanks a lot. It was easy to fix it .</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-xl-4 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Portfolio Slide</h4>\n                <Slider className=\"portfolio-slider\" {...sliderSettings}>\n                  <div className=\"item\">\n                    <img src={require('../../assets/images/dashboard/Rectangle.jpg')} alt=\"carousel-item\" />\n                  </div>\n                  <div className=\"item\">\n                    <img src={require('../../assets/images/dashboard/Img_5.jpg')} alt=\"carousel-item\" />\n                  </div>\n                  <div className=\"item\">\n                    <img src={require('../../assets/images/dashboard/img_6.jpg')} alt=\"carousel-item\" />\n                  </div>\n                </Slider>\n                <div className=\"d-flex py-4\">\n                  <div className=\"preview-list w-100\">\n                    <div className=\"preview-item p-0\">\n                      <div className=\"preview-thumbnail\">\n                        <img src={require('../../assets/images/faces/face12.jpg')} className=\"rounded-circle\" alt=\"face\" />\n                      </div>\n                      <div className=\"preview-item-content d-flex flex-grow\">\n                        <div className=\"flex-grow\">\n                          <div className=\"d-flex d-md-block d-xl-flex justify-content-between\">\n                            <h6 className=\"preview-subject\">CeeCee Bass</h6>\n                            <p className=\"text-muted text-small\">4 Hours Ago</p>\n                          </div>\n                          <p className=\"text-muted\">Well, it seems to be working now.</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <p className=\"text-muted\">Well, it seems to be working now. </p>\n                <div className=\"progress progress-md portfolio-progress\">\n                  <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{width: '50%'}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-12 col-xl-4 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">To do list</h4>\n                <TodoListComponent />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Visitors by Countries</h4>\n                <div className=\"row\">\n                  <div className=\"col-md-5\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-us\"></i>\n                            </td>\n                            <td>USA</td>\n                            <td className=\"text-right\"> 1500 </td>\n                            <td className=\"text-right font-weight-medium\"> 56.35% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-de\"></i>\n                            </td>\n                            <td>Germany</td>\n                            <td className=\"text-right\"> 800 </td>\n                            <td className=\"text-right font-weight-medium\"> 33.25% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-au\"></i>\n                            </td>\n                            <td>Australia</td>\n                            <td className=\"text-right\"> 760 </td>\n                            <td className=\"text-right font-weight-medium\"> 15.45% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-gb\"></i>\n                            </td>\n                            <td>United Kingdom</td>\n                            <td className=\"text-right\"> 450 </td>\n                            <td className=\"text-right font-weight-medium\"> 25.00% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-ro\"></i>\n                            </td>\n                            <td>Romania</td>\n                            <td className=\"text-right\"> 620 </td>\n                            <td className=\"text-right font-weight-medium\"> 10.25% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-br\"></i>\n                            </td>\n                            <td>Brasil</td>\n                            <td className=\"text-right\"> 230 </td>\n                            <td className=\"text-right font-weight-medium\"> 75.00% </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                  <div className=\"col-md-7\">\n                    <div id=\"audience-map\" className=\"vector-map\"></div>\n                    <VectorMap\n                    map={\"world_mill\"}\n                    backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n                    panOnDrag={true}\n                    containerClassName=\"dashboard-vector-map\"\n                    focusOn= { {\n                      x: 0.5,\n                      y: 0.5,\n                      scale: 1,\n                      animate: true\n                    }}\n                    series={{\n                      regions: [{\n                        scale: ['#3d3c3c', '#f2f2f2'],\n                        normalizeFunction: 'polynomial',\n                        values: mapData\n                      }]\n                    }}\n                  />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        */}\n\n\n        <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Purchase Water Right</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h3>Asset Details</h3>\n          <p> You are purchasing the following right: </p>\n          <p> Price: ${beingBought ? beingBought[5].toString() : \"\"}</p>\n          <p> ID: {beingBought ? beingBought[0].toString() : \"\"}</p>\n          <p> Owner: {beingBought ? beingBought[1].toString() : \"\"}</p>\n          <p> Source: {beingBought ? beingBought[2].toString() : \"\"}</p>\n          <p> Location: {beingBought ? beingBought[3].toString() : \"\"}</p>\n          <p> Amount (Acre/Ft): {beingBought ? beingBought[4].toString() : \"\"}</p>\n          <p> Type: {beingBought[6] ? \"Purchase\" : \"Lease\"}</p>\n          {beingBought[6] ? null : <p> Length: {beingBought[7] ? parseInt(beingBought[7][\"_hex\"]) : null} months</p>}\n          <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n            <Form.Check type=\"checkbox\" label=\"I understand that all sales are final\" />\n          </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" type=\"submit\" onClick={() => {completePurchase(beingBought)}}>\n            Buy Now!\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showSell} onHide={handleCloseSell}>\n      <Modal.Header closeButton>\n        <Modal.Title>List Right for Sale</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h3>Asset Details</h3>\n        <p> You are listing the following right: </p>\n        <p> ID: {beingSold ? beingSold[0].toString() : \"\"}</p>\n        <p> Source: {beingSold ? beingSold[1].toString() : \"\"}</p>\n        <p> Location: {beingSold ? beingSold[2].toString() : \"\"}</p>\n        <p> Amount (Acre/Ft): {beingSold ? beingSold[3].toString() : \"\"}</p>\n        <p> Type: {beingSold[4] ? \"Purchase\" : \"Lease\"}</p>\n        {beingSold[4] ? null : <p> Length: {beingSold[5] ? parseInt(beingSold[5][\"_hex\"]) : null} months</p>}\n        <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Price (in $USD)</Form.Label>\n          <Form.Control type=\"text\" name=\"price\" placeholder=\"Enter Sale Price\" onChange={handleChange}/>\n          <Form.Text className=\"text-muted\">\n            Please type your listing price in whole dollars\n          </Form.Text>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"I understand that all sales are final\" />\n        </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseSell}>\n          Cancel\n        </Button>\n        <Button variant=\"primary\" type=\"submit\" onClick={() => {reListAssetForSale(beingSold)}}>\n          Sell Now!\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n\n      </div>\n    );\n  }\n\n\nexport default Dashboard;\n"],"sourceRoot":""}